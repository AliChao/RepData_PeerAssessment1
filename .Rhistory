rownames(XY6_test_train) <-c()
View(XY6_test_train)
## 1.Merges the training and the test sets to create one data set.
##load X_test,Y_test,X_train,Y_train,subject_test,subject_train
X_test <- read.table("G:/R_code/data/UCI HAR Dataset/test/X_test.txt", quote="\"")
X_train <- read.table("G:/R_code/data/UCI HAR Dataset/train/X_train.txt", quote="\"")
Y_test <- read.table("G:/R_code/data/UCI HAR Dataset/test/Y_test.txt", quote="\"")
Y_train <- read.table("G:/R_code/data/UCI HAR Dataset/train/Y_train.txt", quote="\"")
subject_test <- read.table("G:/R_code/data/UCI HAR Dataset/test/subject_test.txt", quote="\"")
subject_train <- read.table("G:/R_code/data/UCI HAR Dataset/train/subject_train.txt", quote="\"")
##change the colnames
features <- read.table("G:/R_code/data/UCI HAR Dataset/features.txt", quote="\"")
colnames(X_test) <- c(as.character(features$V2))
colnames(X_train) <- c(as.character(features$V2))
colnames(Y_test) <- c("labels_ID")
colnames(Y_train) <- c("labels_ID")
colnames(subject_test) <-c ("subject")
colnames(subject_train) <-c ("subject")
## combine X_test and Y_test to XY_test, X_train and Y_train to XY_train
XY_test<-cbind(subject_test,Y_test,X_test)
XY_train<- cbind (subject_train,Y_train,X_train)
##merge XY_train and XY_test to XY_test_train
XY_test_train <- rbind(XY_test,XY_train)
## 2.Extracts only the measurements on the mean and standard deviation for each measurement.
## sorting mean and std
meanstd <-grep("std()|mean()",features$V2)
meanstd2 <- meanstd[c(-47,-48,-49,-57,-58,-65,-66,-67,-70,-73,-76,-79)]
meanstd3 <-c(1,2,meanstd2+c(2))
XY2_test_train <- XY_test_train[,meanstd3]
## 3.Uses descriptive activity names to name the activities in
##the data set(have done in stage 1)
## 4.Appropriately labels the data set with descriptive activity names.
##load activity_labels and merge activity_labels and XY2_test_train to XY2_test_train
activity_labels <- read.table("G:/R_code/data/UCI HAR Dataset/activity_labels.txt", quote="\"")
colnames(activity_labels) <- c("labels_ID","Activity_labels")
XY2_test_train <- merge.data.frame(x=XY2_test_train,y=activity_labels,by.x="labels_ID",by.y="labels_ID",sort=F)
## put the labels_names to col 2
XY3_test_train <- XY2_test_train[,c(1,70,2,3:69)]
## 5. Creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
## delete the labels_names
XY4_test_train <- XY3_test_train[,c(1,3:70)]
XY4_test_train <-aggregate(XY4_test_train[,c(3:69)],by=list(labels_ID=XY4_test_train$labels_ID,subject=XY4_test_train$subject),FUN=mean)
## add the labels_names back
XY5_test_train <-merge.data.frame(x=activity_labels,y=XY4_test_train,by.x="labels_ID",by.y="labels_ID",sort=F)
## order the tidy data
XY6_test_train <-XY5_test_train[order(XY5_test_train$labels_ID,XY5_test_train$subject),]
rownames(XY6_test_train) <-c()
#outcome
write.table(XY3_test_train, "c:/tidydata1.txt", sep="\t")
write.table(XY6_test_train, "c:/tidydatamean.txt", sep="\t")
tidydatamean <- read.delim("C:/tidydatamean.txt")
View(tidydatamean)
View(XY_test_train)
## 1.Merges the training and the test sets to create one data set.
##load X_test,Y_test,X_train,Y_train,subject_test,subject_train
X_test <- read.table("G:/R_code/data/UCI HAR Dataset/test/X_test.txt", quote="\"")
X_train <- read.table("G:/R_code/data/UCI HAR Dataset/train/X_train.txt", quote="\"")
Y_test <- read.table("G:/R_code/data/UCI HAR Dataset/test/Y_test.txt", quote="\"")
Y_train <- read.table("G:/R_code/data/UCI HAR Dataset/train/Y_train.txt", quote="\"")
subject_test <- read.table("G:/R_code/data/UCI HAR Dataset/test/subject_test.txt", quote="\"")
subject_train <- read.table("G:/R_code/data/UCI HAR Dataset/train/subject_train.txt", quote="\"")
##change the colnames
features <- read.table("G:/R_code/data/UCI HAR Dataset/features.txt", quote="\"")
colnames(X_test) <- c(as.character(features$V2))
colnames(X_train) <- c(as.character(features$V2))
colnames(Y_test) <- c("labels_ID")
colnames(Y_train) <- c("labels_ID")
colnames(subject_test) <-c ("subject")
colnames(subject_train) <-c ("subject")
## combine X_test and Y_test to XY_test, X_train and Y_train to XY_train
XY_test<-cbind(subject_test,Y_test,X_test)
XY_train<- cbind (subject_train,Y_train,X_train)
##merge XY_train and XY_test to XY_test_train
XY_test_train <- rbind(XY_test,XY_train)
## 2.Extracts only the measurements on the mean and standard deviation for each measurement.
## sorting mean and std
meanstd <-grep("std()|mean()",features$V2)
meanstd2 <- meanstd[c(-47,-48,-49,-57,-58,-65,-66,-67,-70,-73,-76,-79)]
meanstd3 <-c(1,2,meanstd2+c(2))
XY2_test_train <- XY_test_train[,meanstd3]
## 3.Uses descriptive activity names to name the activities in
##the data set(have done in stage 1)
## 4.Appropriately labels the data set with descriptive activity names.
##load activity_labels and merge activity_labels and XY2_test_train to XY2_test_train
activity_labels <- read.table("G:/R_code/data/UCI HAR Dataset/activity_labels.txt", quote="\"")
colnames(activity_labels) <- c("labels_ID","Activity_labels")
XY2_test_train <- merge.data.frame(x=XY2_test_train,y=activity_labels,by.x="labels_ID",by.y="labels_ID",sort=F)
## put the labels_names to col 2
XY3_test_train <- XY2_test_train[,c(1,70,2,3:69)]
## 5. Creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
## delete the labels_names
XY4_test_train <- XY3_test_train[,c(1,3:70)]
XY5_test_train <-aggregate(XY4_test_train[,c(3:69)],by=list(labels_ID=XY4_test_train$labels_ID,subject=XY4_test_train$subject),FUN=mean)
## add the labels_names back
XY6_test_train <-merge.data.frame(x=activity_labels,y=XY5_test_train,by.x="labels_ID",by.y="labels_ID",sort=F)
## order the tidy data
XY7_test_train <-XY5_test_train[order(XY5_test_train$labels_ID,XY6_test_train$subject),]
rownames(XY7_test_train) <-c()
#outcome
write.table(XY3_test_train, "c:/tidydata1.txt", sep="\t")
write.table(XY7_test_train, "c:/tidydatamean.txt", sep="\t")
## 5. Creates a second, independent tidy data set with the
##average of each variable for each activity and each subject.
## delete the labels_names
XY4_test_train <- XY3_test_train[,c(1,3:70)]
XY5_test_train <-aggregate(XY4_test_train[,c(3:69)],by=list(labels_ID=XY4_test_train$labels_ID,subject=XY4_test_train$subject),FUN=mean)
## add the labels_names back
XY6_test_train <-merge.data.frame(x=activity_labels,y=XY5_test_train,by.x="labels_ID",by.y="labels_ID",sort=F)
## order the tidy data
XY7_test_train <-XY6_test_train[order(XY6_test_train$labels_ID,XY6_test_train$subject),]
rownames(XY7_test_train) <-c()
#outcome
write.table(XY3_test_train, "c:/tidydata1.txt", sep="\t")
write.table(XY7_test_train, "c:/tidydatamean.txt", sep="\t")
`582dde10d86e11e39c6569de48cc46a0` <- read.delim("G:/R_code/data/582dde10d86e11e39c6569de48cc46a0.txt")
View(`582dde10d86e11e39c6569de48cc46a0`)
`f43f42b0e45011e3b37fb7d142ccad42` <- read.csv("G:/R_code/peer/f43f42b0e45011e3b37fb7d142ccad42.txt")
View(`f43f42b0e45011e3b37fb7d142ccad42`)
`66c80590e45311e3af3bbdb0ee4ffe21` <- read.csv("G:/R_code/peer/66c80590e45311e3af3bbdb0ee4ffe21.csv")
View(`66c80590e45311e3af3bbdb0ee4ffe21`)
ef252540e45c11e3adb9cf5762aff4ac <- read.table("G:/R_code/peer/ef252540e45c11e3adb9cf5762aff4ac.txt", header=T, quote="\"")
View(ef252540e45c11e3adb9cf5762aff4ac)
`582dde10d86e11e39c6569de48cc46a0` <- read.delim("G:/R_code/data/582dde10d86e11e39c6569de48cc46a0.txt")
View(`582dde10d86e11e39c6569de48cc46a0`)
library(datasets)
with(airquality, ploy(Wind,Ozone))
with(airquality, plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
with(subset(airquality,Month==5),points(Wind.Ozone, col="blue"))
with(subset(airquality,Month==5),points(Wind,Ozone, col="blue"))
with(subset(airquality,Month!=5),points(Wind,Ozone, col="red"))
legend("topright", pch = 2, col=c("blue","red"),legend = c ("May","Not May"))
legend("topright", pch = 1, col=c("blue","red"),legend = c ("May","Not May"))
legend("top", pch = 1, col=c("blue","red"),legend = c ("May","Not May"))
x <- rnorm(1000)
hist(x)
y <- rnorm(1000)
plot(x,y)
z <- rnorm(1000)
par(mar = c (2,2,2,2))
plot(x,y)
par(mar = c (4,4,2,2))
plot(x,y)
plot(x,y, pch = 20)
plot(x,y, pch = 19)
plot(x,y, pch = 18)
plot(x,y, pch = 17)
plot(x,y, pch = 16)
plot(x,y, pch = 15)
plot(x,y, pch = 14)
plot(x,y, pch = 55)
plot(x,y, pch = 4)
example(points)
plot(x,y, pch = 20)
y <- rnorm(1000)
x <- rnorm(1000)
plot(x,y, pch = 20)
title("my plot")
text(4,-3,"label")
legend("topright", legend(data,pch=20))
legend("topright", legend = "data" ,pch=20)
fit <- lm (y~x)
abline(fit)
abline(fit,lwd = 5)
abline(fit,lwd = 5, col = "red")
abline(fit,lwd = 3, col = "red")
abline(fit,lwd = 1, col = "red")
plot(x,y, xlab = "weight", ylab = "age", main"myplot", pch = 21)
plot(x,y, xlab = "weight", ylab = "age", main="myplot", pch = 21)
plot(x,y, xlab = "weight", ylab = "age", main="myplot", pch = 28)
plot(x,y, xlab = "weight", ylab = "age", main="myplot", pch = 24)
legend("topfight", legend = "data", pch = 24)
legend("topright", legend = "data", pch = 24)
abline(fit)
abline(fit, lwd = 3, col = "red")
z <-rpois(1000,2)
par(mfrow=c(2,1))
plot(x,y, pch = 20)
plot(x,z, pch = 12)
par("mat")
par("mar")
par(mar = c(4,4,2,2))
plot(x,y, pch = 20)
plot(x,z, pch = 12)
par (mfrow=c(1,1))
x <- rnorm(100)
y <- x + rnorm(100)
plot(x,y)
g <- gl(2,50)
g <- gl(2,50, labels = c("Male","Female" ))
str(g)
plot(x,y)
plot(x,y , type = "n")
?gl
str(x)
library(fPortfolio)
install.packages("fPortfolio")
install.packages("fTrading")
install.packages("fTrading")
?fTradinf
?fTrading
install.packages("forecast")
`stock_tw.(1)` <- read.csv("G:/R_code/data/stock_tw (1).csv")
View(`stock_tw.(1)`)
A <- stock_tw.(1)
stock_tw <- read.csv("G:/R_code/data/stock_tw (1).csv")
View(stock_tw)
A <- stock_tw
A$stock.tw.date<-as.Date(A$stock.tw.date,format="%Y/%m/%d")
library(fPortfolio)
ts.tw.r<-as.timeSeries(A)
l1=0.944
lambda1<-rep(0,times=(length(ts.tw.r)/2))
ts_tw_r<-as.timeSeries(rep(0,times=(length(ts.tw.r)/2)))
lambda1[1]<-l1
for(ii in 2:(length(ts.tw.r)/2)){lambda1[ii]<-lambda1[(ii-1)]*l1}
library(fTrading)
library(forecast)
ts.tw.r
ts_tw_r
for(ii in 1:1250){ts_tw_r[ii]<-((sum((ts.tw.r[ii:(ii+1249),]-mean(ts.tw.r[ii:(ii+1249),]))^2*lambda1))*(1-l1))^(0.5)*qnorm(p=0.99)}
ts_tw_r
merge(ts_tw_r,ts.tw.r[1251:2500],by="Data",all=T)
cbind(ts.tw.r,ts_tw_r)
View(ts.tw.r)
View(ts_tw_r)
cbind(ts.tw.r[,1251:2500],ts_tw_r)
ts.tw.r[,1251:2500]
ts.tw.r[1251:2500,]
ts.tw.r1 <-ts.tw.r[1251:2500,]
View(ts.tw.r1)
cbind(ts.tw.r1,ts_tw_r)
class(ts.tw.r1)
ts.tw.r.new <- cbind(ts.tw.r1,ts_tw_r)
head(ts.tw.r.new)
200*52
200*2*52
install.packages(c("evaluate", "jsonlite", "MASS", "Rcpp", "RcppArmadillo", "swirl"))
setwd("~/GitHub/RepData_PeerAssessment1")
activity <- read.csv("~/GitHub/RepData_PeerAssessment1/activity.csv")
sumperday <-tapply(activity$steps,activity$date,sum,na.rm=F)
nonasumperday<-sumperday[complete.cases(sumperday)]
hist(x=nonasumperday,xlab="total number of steps taken each day",main="Histogram of the Total Number of Steps Taken Each Day")
meanday <-tapply(activity$steps,activity$date,mean,na.rm=F)
intervalaverage <-tapply(activity$steps,activity$interval,mean,na.rm=T)
intervalday <-as.numeric(intervalday)
intervalaverage<-cbind(intervalaverage,intervalday)
View(intervalaverage)
intervalday<-row.names(intervalaverage)
intervalday <-as.numeric(intervalday)
intervalaverage<-cbind(intervalaverage,intervalday)
plot(x=intervalaverage[,2],y=intervalaverage[,1],type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Time Series Plot")
which.max(intervalaverage[,1])
rownames(intervalaverage)<-C()
rownames(intervalaverage)<-NULL
which.max(intervalaverage[,1])
maxrownumber<- which.max(intervalaverage[,1])
intervalaverage[104,2]
intervalaverage[[104,2]
]
intervalaverage[[104,2]]
intervalaverage[[maxrownumber,2]]
complete.cases(activity$date)
table(complete.cases(activity$date))
table(complete.cases(activity$steps))
sum(FALSE,complete.cases(activity$steps))
sum(complete.cases(activity$steps))
!sum(complete.cases(activity$steps))
table(complete.cases(activity$steps))[FALSE]
table(complete.cases(activity$steps))[,FALSE]
table(complete.cases(activity$steps))[FALSE,]
table(complete.cases(activity$steps))$FALSE
result <-table(complete.cases(activity$steps))
result$FALSE
result[,1]
result
str(result)
result[FALSE]
result[1]
result[[1]]
weekdays(activity$date)
?weekdays
weekdays(x=activity$date,abbreviate=T)
activity$date
str(activity$date)
weekdays(x=activity$date,abbreviate=T)
as.Date(activity$date)
newactivity <-as.Date(activity[,2])
weekdays(x=newactivity,abbreviate=T)
weekdays(x=newactivity,abbreviate=F)
weekdays(x=newactivity,abbreviate=T)
weekday <-weekdays(as.Date(activity[,2]))
View(cbind(activity,weekday))
head(cbind(activity,weekday))
head(activityweekdays[activityweekdays$weekday])
head(activityweekdays[weekday])
weekday <-weekdays(as.Date(activity[,2]))
activityweekdays <- cbind(activity,weekday)
head(activityweekdays[activityweekdays$weekday])
head(activityweekdays[weekday])
head(activityweekdays$weekday)
activityweekdays$weekday[weekday=="Sunday"] <- weekend
activityweekdays$weekday[weekday=="Sunday"] <- "weekend"
head(activityweekdays$weekday)
activityweekdays$weekday[weekday=="Monday"] <- "weekday"
head(activityweekdays$weekday)
str(weekday)
View(activityweekdays
)
?weekday
?weekdays
activityweekdays$weekday[1]
new <-c("Sunday","Monday","Saturday")
activityweekdays$weekday[1:100]
weekdays <-NULL
for(i in 100) {
if (activityweekdays$weekday[i]=="Sunday"|"Saturday"){
weekday[i]<-"weekend"
}
else{weekday[i]<-"weekday"}
}
weekdays
weekdays <-NULL
for(i in 100) {
if (activityweekdays$weekday[i]=="Sunday"){
weekday[i]<-"weekend"
}
else{weekday[i]<-"weekday"}
}
weekdays
weekdays <-NULL
for(i in 100) {
if (activityweekdays$weekday[i]=="Sunday"){
weekday[[i]]<-"weekend"
}
else{weekday[[i]]<-"weekday"}
}
weekdays
weekdays <-NULL
for(i in 100) {
if (activityweekdays$weekday[i]=="Sunday"){
weekdays[[i]]<-"weekend"
}
else{weekdays[[i]]<-"weekday"}
}
weekdays
weekdays <-NULL
for(i in 1) {
if (activityweekdays$weekday[i]=="Sunday"){
weekdays[[i]]<-"weekend"}
else{weekdays[[i]]<-"weekday"}
}
weekdays
weekdays <-NULL
for(i in 2) {
if (activityweekdays$weekday[i]=="Sunday"){
weekdays[[i]]<-"weekend"}
else{weekdays[[i]]<-"weekday"}
}
weekdays
activityweekdays$weekday[1:500]
weeksdays <-activityweekdays$weekday[1:500]
weeksdays[weeksdays=="Sunday"] <- "weekend"
weeksdays[weeksdays=="Sunday"]
weeksdays[weeksdays==Sunday]
weeksdays[weeksdays==星期日]
weeksdays[weeksdays=="星期日"]
weeksdays[weeksdays=="Monday"]
weeksdays[weeksdays=="星期一"]
Sys.setlocale("LC_TIME", "en_US")
Sys.setlocale("LC_TIME","English United States")
weekdays(Sys.Date()+0:6)
Sys.setlocale("LC_TIME","English")
weekdays(Sys.Date()+0:6)
weekday <-weekdays(as.Date(activity[,2]))
activityweekdays <- cbind(activity,weekday)
activityweekdays[activityweekdays$weekday]
View(activityweekdays)
weeksdays[weeksdays=="Monday"]<-"weekday"
weeksdays <-activityweekdays$weekday[1:500]
weeksdays[weeksdays=="Monday"]<-"weekday"
weeksdays[weeksdays=="Monday"]<-weekday
weekday <-weekdays(as.Date(activity[,2]))
weekday
a<-weekday[1:500]
gsub("Monday","weekday",a)
b<-gsub("Monday","weekday",a)
head(b)
b<-gsub("Monday"|"Tuesday","weekday",a)
b<-gsub("Monday"&"Tuesday","weekday",a)
b<-gsub("Monday"%"Tuesday","weekday",a)
b<-gsub(c("Mondady","Tuseday"),"weekday",a)
?gsub
b<-gsub(c("Mondady","Tuseday"),c("weekday","weekday",a)
b<-gsub(c("Mondady","Tuseday"),c("weekday","weekday",a)
b<-gsub(c("Mondady","Tuseday"),c("weekday","weekday"),a)
b<-gsub(c("Mondady","weekday",a)
)
b<-gsub("Mondady","weekday",a)
a<-gsub("Mondady","weekday",a)
a<-gsub("Tuseday","weekday",a)
a<-gsub("Wednesday","weekday",a)
a<-gsub("Thursday","weekday",a)
a<-gsub("Friday","weekday",a)
a
a<-gsub("Monday","weekday",a)
a<-gsub("Tuesday","weekday",a)
a
weekday <-weekdays(as.Date(activity[,2]))
weekday <-gsub("Mondady","weekday",weekday)
weekday <-gsub("Tuseday","weekday",weekday)
weekday <-gsub("Wednesday","weekday",weekday)
weekday <-gsub("Thursday","weekday",weekday)
weekday <-gsub("Friday","weekday",weekday)
weekday <-gsub("Saturday","weekend",weekday)
weekday <-gsub("Sundday","weekend",weekday)
activityweekdays <- cbind(activity,weekday)
View(activityweekdays)
weekday <-weekdays(as.Date(activity[,2]))
weekday <-gsub("Monady","weekday",weekday)
weekday <-gsub("Tuesday","weekday",weekday)
weekday <-gsub("Wednesday","weekday",weekday)
weekday <-gsub("Thursday","weekday",weekday)
weekday <-gsub("Friday","weekday",weekday)
weekday <-gsub("Saturday","weekend",weekday)
weekday <-gsub("Sundday","weekend",weekday)
activityweekdays <- cbind(activity,weekday)
View(activityweekdays)
weekday <-weekdays(as.Date(activity[,2]))
weekday <-gsub("Monday","weekday",weekday)
weekday <-gsub("Tuesday","weekday",weekday)
weekday <-gsub("Wednesday","weekday",weekday)
weekday <-gsub("Thursday","weekday",weekday)
weekday <-gsub("Friday","weekday",weekday)
weekday <-gsub("Saturday","weekend",weekday)
weekday <-gsub("Sundday","weekend",weekday)
activityweekdays <- cbind(activity,weekday)
View(activityweekdays)
str(activityweekdays$weekday)
weekday <-weekdays(as.Date(activity[,2]))
weekday <-gsub("Monday","weekday",weekday)
weekday <-gsub("Tuesday","weekday",weekday)
weekday <-gsub("Wednesday","weekday",weekday)
weekday <-gsub("Thursday","weekday",weekday)
weekday <-gsub("Friday","weekday",weekday)
weekday <-gsub("Saturday","weekend",weekday)
weekday <-gsub("Sunday","weekend",weekday)
activityweekdays <- cbind(activity,weekday)
str(activityweekdays$weekday)
library(lattice)
View(intervalaverage)
a <-activityweekdays[weekday=="weekday"]
a <-activityweekdays[,weekday=="weekday"]
a <-activityweekdays[weekday=="weekday",]
View(a)
b <-activityweekdays[weekday=="weekend",]
weekdaymean<-tapply(a$steps,a$interval,mean,na.rm=T)
View(weekdaymean)
colnames(weekdaymean)<-"weekdaymean"
weekdaymean<-cbind(weekdaymean,intervalday)
colnames(weekdaymean)<-"weekdaymean"
View(weekdaymean)
weekdaymean<-cbind(weekdaymean,rep("weekday",288))
View(weekdaymean)
weekendmean<-tapply(activityweekend$steps,activityweekend$interval,mean,na.rm=T)
weekendmean<-cbind(weekendmean,intervalday)
weekendmean<-cbind(weekendmean,rep("weekday",288))
weekendmean<-tapply(b$steps,b$interval,mean,na.rm=T)
weekendmean<-cbind(weekendmean,intervalday)
weekendmean<-cbind(weekendmean,rep("weekday",288))
weekendmean<-tapply(b$steps,b$interval,mean,na.rm=T)
weekendmean<-cbind(weekendmean,intervalday)
weekendmean<-cbind(weekendmean,rep("weekend",288))
View(weekendmean)
mean <-rbind(weekdaymean,weekendmean)
View (mean)
tail (mean)
colnames(mean) <-c ("mean","interval","weekday")
tail (mean)
head (mean)
rownames(mean) <-NULL
head (mean)
mean$mean<-as.numeric(mean$mean)
mean$mean<-as.numeric(mean[,1])
mean[,1]<-as.numeric(mean[,1])
mean[,1]
mean$mean
class(mean$mean)
class(mean$interval)
mean$interval
mean
head(mean)
mean <-rbind(weekdaymean,weekendmean)
colnames(mean) <-c ("mean","interval","weekday")
rownames(mean) <-NULL
head(mean)
class(mean$mean)
class(mean)
mean <- as.data.frame(mean)
class(mean)
class(mean)
class(mean$mean)
xyplot(mean~interval|weekday,data=mean,layout(1,2))
xyplot(mean~interval|weekday,data=mean,layout(1,2),type="l")
xyplot(mean~interval|weekday,data=mean,layout(2,1),type="l")
plot(x=mean[1:288,2],y=mean[1:288,1],type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Time Series Plot")
plot(x=mean[1:288,2],y=mean[1:288,1],type="l",xlab="5-minute interval",ylab="average number of steps taken",main="Time Series Plot")
plot(x=mean[1:288,2],y=mean[1:288,1])
View(mean)
plot(x=mean[,2],y=mean[,1])
